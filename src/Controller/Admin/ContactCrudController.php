<?php

namespace App\Controller\Admin;

use App\Entity\Contact;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\DateTimeField;
use EasyCorp\Bundle\EasyAdminBundle\Field\EmailField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class ContactCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Contact::class;
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            IdField::new('id')->hideOnForm(),
            TextField::new('nom'),
            TextField::new('prenom'),
            EmailField::new('email'),
            TextField::new('objet'),
            TextEditorField::new('contenu'),
            DateTimeField::new('createdAt')->hideOnForm()->setLabel('Créé le :')
        ];
    }
    public function configureCrud(Crud $crud): Crud
    {
        $crud->setPageTitle(Crud::PAGE_INDEX,'Liste des Contacts')
            ->setPageTitle(Crud::PAGE_NEW,'Création d\'un Contact');
        $crud->setPaginatorPageSize(10)
            ->setPaginatorRangeSize(2);
        $crud->setDefaultSort(['createdAt'=>'DESC']);
        return $crud;
    }

    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if(!$entityInstance instanceof Contact) return;
        $entityInstance->setCreatedAt(new \DateTime());
        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function configureActions(Actions $actions): Actions
    {
        $actions->remove(Crud::PAGE_INDEX, Action::NEW
        )
            ->update(Crud::PAGE_NEW, Action::SAVE_AND_RETURN,
                function (Action $action) {
                    return $action->setLabel('Valider')->setIcon('fa fa-check');
                }
            )
            ->remove(Crud::PAGE_NEW, Action::SAVE_AND_ADD_ANOTHER
            )
            ->add(Crud::PAGE_INDEX, Action::DETAIL)
            ->update(Crud::PAGE_INDEX, Action::DETAIL,  function (Action $action) {
                return $action->setLabel('Détails');
            });
        return $actions;
    }

}
